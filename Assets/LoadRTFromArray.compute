// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

struct Pixel
{
  float r;
  float g;
  float b;
};

RWStructuredBuffer<Pixel> PixelBuffer;


[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	Pixel p = PixelBuffer[id.y*8192+id.x];
	// TODO: insert actual code here!
	Result[id.xy] = float4(p.r , p.g , p.b , 1.0);
	//Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}
